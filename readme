
python变量：
 变量定义不需要声明，在赋值过程中，自动识别和定义数据类型。
 2. python的数据类型和java基本上一致， 空python位None;
 3. python 支持同时给多个变量进行赋值 a=b=c=100

 4. 数字类型：
    4.1 每次赋值一个变量会分别一个空间， 可以通过del进行变量删除
    4.2 数字类型包括int float long complex（复数等）

 5. 字符串类型
   5.1 通过“” ‘’
   5.2 从右到左从0开始  从左到右 从-1开始  用于截取用
   5.3 + 连接  ； * 重复次数

 6. 列表： list []表示的
   6.1 数组表示 可以通过下标的位移偏移量确定数组
   6.2 从右到左从0开始  从左到右 从-1开始  用于截取用
   6.3 + 连接  ； * 重复次数
   6.4 列表中如果有中文，打印输出的结果为ACII码 ['\xe8\x83\xa1\xe6\x98\x8e\xe4\xbc\x9f', '\xe5\xbc\xa0\xe4\xb8\x89', '\xe6\x9d\x8e\xe5\x9b\x9b', '\xe7\x8e\x8b\xe4\xba\x94']

7. 元组 tuple（）
   7.1 元组是另一个数据类型，类似于List（列表）。
        元组用"()"标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。

8. 字典类型  实际上就是map 类似 用key-value 组合
   8.1 用key-value 组合
   8.2 用{}
   8.3 dict.keys获取key的值
   8.4 dict.values获取value的值
   8.5 dic.clear() 等其他函数 字典的函数
   8.5 dic.clear() 等其他函数 字典的函数


 9. python数据类型的转换
         int(x [,base])
        将x转换为一个整数
        long(x [,base] )
        将x转换为一个长整数
        float(x)
        将x转换到一个浮点数
        complex(real [,imag])
        创建一个复数
        str(x)
        将对象 x 转换为字符串
        repr(x)
        将对象 x 转换为表达式字符串
        eval(str)
        用来计算在字符串中的有效Python表达式,并返回一个对象
        tuple(s)
        将序列 s 转换为一个元组
        list(s)
        将序列 s 转换为一个列表
        set(s)
        转换为可变集合
        dict(d)
        创建一个字典。d 必须是一个序列 (key,value)元组。
        frozenset(s)
        转换为不可变集合
        chr(x)
        将一个整数转换为一个字符
        unichr(x)
        将一个整数转换为Unicode字符
        ord(x)
        将一个字符转换为它的整数值
        hex(x)
        将一个整数转换为一个十六进制字符串
        oct(x)
        将一个整数转换为一个八进制字符串

